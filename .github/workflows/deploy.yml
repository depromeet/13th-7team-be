name: Java CI / CD with Gradle

on:
  push:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup jdk-17
        uses: actions/setup-java@main
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      #      - name: spotless check
      #        run: ./gradlew spotlessCheck --no-daemon

      - uses: actions/checkout@v2
      - run: touch ./Domain/src/main/resources/application-domain.yml
      - run: echo "${{ secrets.APPLICATION_DOMAIN }}" > ./Domain/src/main/resources/application-domain.yml

      - uses: actions/checkout@v2
      - run: touch ./Infrastructure/src/main/resources/application-infrastructure.yml
      - run: echo "${{ secrets.APPLICATION_INFRASTRUCTURE }}" > ./Infrastructure/src/main/resources/application-infrastructure.yml

      - uses: actions/checkout@v2
      - run: touch ./Infrastructure/src/main/resources/application-core.yml
      - run: echo "${{ secrets.APPLICATION_CORE }}" > ./Infrastructure/src/main/resources/application-core.yml

      - name: Build with Gradle
        run: ./gradlew build

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest

      # GET GitHub IP
      - name: get GitHub IP
        id: ip
        uses: haythem/public-ip@v1.2

      # Configure AWS Credentials - AWS 접근 권한 취득(IAM)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Add github ip to AWS
      - name: Add GitHub IP to AWS
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      # AWS EC2 Server Connect & Docker 명령어 실행
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          password: ${{ secrets.EC2_PASSWORD }}
          port: ${{ secrets.EC2_SSH_PORT }}
          timeout: 60s
          # 도커 작업
          script: |
            cd app
            sudo rm concal.log
            sudo docker rm - f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
            docker-compose up -d
            sudo docker logs -f api-server &> concal.log &
            docker image prune -f

      # REMOVE Github IP FROM security group
      - name: Remove IP FROM security group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
